% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hsvClipAvi.R
\name{hsvClipAvi}
\alias{hsvClipAvi}
\title{Clip a portion of video range}
\usage{
hsvClipAvi(
  infiles,
  from,
  to,
  suffix = paste(from, to, sep = "-"),
  keepinfiles = TRUE,
  savedir = "."
)
}
\arguments{
\item{infiles}{Strings. The names of the avi files you want to clip.}

\item{from}{An integer. The index of the frame (frame number)
in the input file from where the clipped video starts.}

\item{to}{An integer. The index of the frame (frame number)
in the input file to where the video should be clipped.}

\item{suffix}{A string. The suffix to the file names
concatenated to the names of input avi files
to make those for the outputs.}

\item{keepinfiles}{A logical. Whether to keep the input files
after the conversion.}

\item{savedir}{A string. The path to the directory
you want to save the output file(s)}
}
\value{
A string. The names of the created avi file.
}
\description{
\code{hsvClipAvi()} extracts designated time range of videos
and create new avi files from input sources.
}
\details{
This function clips designated range in the input avi files,
without performing any other video conversion.
Such video clipping is referred to in many different wordings
like cutting, splitting, splicing, and trimming.
In certain occasions, all these words can be used interchangeably.
But in other situation, each one can express different meaning.
To avoid confusion with cropping in spatial domain,
this process may be better referred to as "time clipping" or
"temporal trimming".
It can be used, for example, to cut off certain range of
the video data to which you want to perform further analyses.

Since no conversion is performed (with \verb{-c copy} option in \code{ffmpeg}),
this function normally takes not so long.
However, as a drawback of it, clipped videos may not strictly start
from the first frame of the designated clipping range.
This is due to the limitation of FFmpeg itself.
The \code{copy} option mentioned above prevent any conversion
of the input video stream.
Therefore, clipping can only be started from the nearest
preceding keyframes in the original files.
(Otherwise, video conversion would be necessary.)
If the input files are raw (typically very huge) avi files
with no video compression, this limitation does not matter
since all the frames are technically keyframes in such a case.
}
\examples{
\dontrun{
hsvClipAvi("input.avi", from = 1000, to = 1999)
}

}
\keyword{utilities}
