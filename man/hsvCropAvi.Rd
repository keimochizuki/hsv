% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hsvCropAvi.R
\name{hsvCropAvi}
\alias{hsvCropAvi}
\title{Crop a region of video area}
\usage{
hsvCropAvi(
  infiles,
  w,
  h,
  xoffset = 0,
  yoffset = 0,
  suffix = paste(w, h, sep = "x"),
  keepinfiles = TRUE,
  savedir = "."
)
}
\arguments{
\item{infiles}{Strings. The names of the avi files you want to crop.}

\item{w}{An integer. The width of the cropping region in pixels.}

\item{h}{An integer. The height of the cropping region in pixels.}

\item{xoffset}{An integer. The number of pixels skipped
toward x-axis before cropping region starts.
This value equals to the left margin omitted
from original videos.}

\item{yoffset}{An integer. The number of pixels skipped
toward y-axis before cropping region starts.
Note, as a tradition of image processing,
the origin of an image is normally \emph{top}-left corner.
Therefore, this value equals to the top (instead of bottom)
margin omitted from original videos.}

\item{suffix}{A string. The suffix to the file names
concatenated to the names of input avi files
to make those for the outputs.}

\item{keepinfiles}{A logical. Whether to keep the input files
after the conversion.}

\item{savedir}{A string. The path to the directory
you want to save the output file(s)}
}
\value{
A string. The names of the created avi file.
}
\description{
Extracts designated range of videos and create new avi files
from designated input sources.
}
\details{
This function clips designated range in the input avi files,
without performing any other video conversion.
It can be used, for example, to cut off certain range of the
video file to where your further analyses are applied.

Since no conversion is performed (with \verb{-c copy} option in \code{ffmpeg}),
this function normally takes not so long.
However, as a drawback of it, clipped videos may not strictly start
from the first frame of the designated clipping range.
This is due to the limitation of FFmpeg itself.
The \code{copy} option mentioned above prevent any conversion
of the input video stream.
Therefore, clipping can be started from the nearest preceding keyframes
in the original files.
(Otherwise, video conversion would be necessary.)
If the input files are raw (typically very huge) avi files
with no video compression, this limitation does not matter
since all frames behave as keyframes in such a case.
}
\examples{
\dontrun{
hsvClipAvi("input.avi", from = 1000, to = 1999)
}

}
\keyword{utilities}
