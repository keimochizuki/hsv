% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hsvResizeAvi.R
\name{hsvResizeAvi}
\alias{hsvResizeAvi}
\title{Resize the video resolution}
\usage{
hsvResizeAvi(
  infiles,
  w = -2,
  h = -2,
  crf = 20,
  suffix = paste(ifelse(c(w, h) == -2, "", paste(c("w", "h"), c(w, h), sep = "")),
    collapse = ""),
  keepinfiles = TRUE,
  savedir = "."
)
}
\arguments{
\item{infiles}{Strings. The names of the avi files you want to resize.}

\item{w}{An integer. The width of the resized video.
Default -2, meaning to match the height while keeping the aspect ratio.
Note that odd resolution is not supported due to
the limitation of video compression format.}

\item{h}{An integer. The height of the resized video.
Default -2, meaning to match the width while keeping the aspect ratio.
Note that odd resolution is not supported due to
the limitation of video compression format.}

\item{crf}{An integer. The constant rate factor (crf),
i.e., a value to determine the quality of the converted video
in FFmpeg (ranging from 0 to 51).
Smaller value indicate high quality video.
The default value for original \code{ffmpeg} command is 23.
Therefore, the default for this function is quality-oriented,
in exchange for possible larger file size.}

\item{suffix}{A string. The suffix to the file names
concatenated to the names of input avi files
to make those for the outputs.}

\item{keepinfiles}{A logical. Whether to keep the input files
after the conversion.}

\item{savedir}{A string. The path to the directory
you want to save the output file(s).}
}
\value{
A string. The names of the created avi file.
}
\description{
\code{\link[=hsvResizeAvi]{hsvResizeAvi()}} changes the video resolution to
fit designated width or height.
If either width or height is provided,
the undesignated side will be automatically determined
to keep the original aspect ratio.
If both are provided, the aspect ratio changes
in the resulting video file(s).
}
\examples{
\dontrun{
hsvResizeAvi("video.avi", w = 320)
}

}
\keyword{utilities}
